<?php
/**
 * Simple FTP Upload Script
 * This script directly uploads files to your Hostinger server without cloning from GitHub
 */

require_once __DIR__ . '/vendor/autoload.php';

use Dotenv\Dotenv;

// Load environment variables
$dotenv = Dotenv::createImmutable(__DIR__);
$dotenv->safeLoad();

echo "Starting simple direct upload to Hostinger...\n";
echo "=========================================\n\n";

// FTP connection details
$host = str_replace('ftp://', '', $_ENV['HOSTINGER_HOST']);
$username = trim($_ENV['HOSTINGER_USERNAME']);
$password = $_ENV['HOSTINGER_PASSWORD'];
$port = (int)$_ENV['HOSTINGER_PORT'];
$remotePath = '/public_html/rtest'; // Use the simpler path that works

echo "Host: {$host}\n";
echo "Username: {$username}\n";
echo "Port: {$port}\n";
echo "Remote Path: {$remotePath}\n\n";

try {
    echo "Step 1: Creating test files to upload...\n";
    
    $tempDir = sys_get_temp_dir() . '/hostinger_test_' . uniqid();
    mkdir($tempDir, 0777, true);
    
    // Create a simple test HTML file
    $testHtml = <<<HTML
<!DOCTYPE html>
<html>
<head>
    <title>Hostinger Test - Uploaded at <?= date('Y-m-d H:i:s') ?></title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; line-height: 1.6; }
        h1 { color: #2c3e50; }
        .success { color: #27ae60; font-weight: bold; }
        .footer { margin-top: 40px; font-size: 12px; color: #7f8c8d; }
    </style>
</head>
<body>
    <h1>Hostinger FTP Upload Test</h1>
    <p class="success">If you can see this file, the FTP upload was successful!</p>
    <p>This file was uploaded on: <strong><?= date('Y-m-d H:i:s') ?></strong></p>
    <p>This is a test file created by the SePHP monitoring system to verify FTP deployment.</p>
    <div class="footer">
        <p>Generated by SePHP Monitoring System</p>
    </div>
</body>
</html>
HTML;
    
    file_put_contents($tempDir . '/test.html', $testHtml);
    file_put_contents($tempDir . '/upload_time.txt', 'Uploaded at: ' . date('Y-m-d H:i:s'));
    
    echo "Test files created successfully.\n\n";
    
    // Step 2: Connect to FTP server
    echo "Step 2: Connecting to FTP server...\n";
    
    $conn = ftp_connect($host, $port, 30);
    if (!$conn) {
        throw new Exception("Could not connect to FTP server at {$host}:{$port}");
    }
    
    echo "FTP connection established!\n";
    
    // Login to FTP
    echo "Logging in to FTP server...\n";
    $login = ftp_login($conn, $username, $password);
    if (!$login) {
        throw new Exception("Login failed with the provided credentials");
    }
    
    echo "FTP login successful!\n";
    
    // Set passive mode
    ftp_pasv($conn, true);
    
    // Check if remote path exists
    echo "\nChecking remote path: {$remotePath}\n";
    
    if (@ftp_chdir($conn, $remotePath)) {
        echo "Remote path exists!\n";
    } else {
        echo "Remote path doesn't exist. Creating it...\n";
        
        // Create directory structure
        $pathParts = explode('/', trim($remotePath, '/'));
        $currentPath = '';
        
        foreach ($pathParts as $part) {
            if (empty($part)) continue;
            
            $currentPath .= '/' . $part;
            
            if (!@ftp_chdir($conn, $currentPath)) {
                if (@ftp_mkdir($conn, $currentPath)) {
                    echo "Created directory: {$currentPath}\n";
                    ftp_chdir($conn, $currentPath);
                } else {
                    throw new Exception("Failed to create directory: {$currentPath}");
                }
            }
        }
    }
    
    // Upload files
    echo "\nUploading test files...\n";
    
    // Upload test.html
    echo "Uploading test.html... ";
    if (ftp_put($conn, 'test.html', $tempDir . '/test.html', FTP_ASCII)) {
        echo "SUCCESS\n";
    } else {
        echo "FAILED\n";
        throw new Exception("Failed to upload test.html");
    }
    
    // Upload upload_time.txt
    echo "Uploading upload_time.txt... ";
    if (ftp_put($conn, 'upload_time.txt', $tempDir . '/upload_time.txt', FTP_ASCII)) {
        echo "SUCCESS\n";
    } else {
        echo "FAILED\n";
        throw new Exception("Failed to upload upload_time.txt");
    }
    
    // Verify upload
    echo "\nVerifying uploaded files...\n";
    
    $files = ftp_nlist($conn, '.');
    if ($files === false) {
        echo "Could not list remote directory.\n";
    } else {
        echo "Files in remote directory:\n";
        foreach ($files as $file) {
            echo "- {$file}\n";
        }
    }
    
    // Clean up and close
    ftp_close($conn);
    
    // Remove temp directory
    @unlink($tempDir . '/test.html');
    @unlink($tempDir . '/upload_time.txt');
    @rmdir($tempDir);
    
    echo "\nTest upload completed successfully!\n";
    echo "You should be able to see the test files at:\n";
    echo "https://amskilled.com/rtest/test.html\n";
    echo "or\n";
    echo "http://148.135.141.26/public_html/rtest/test.html\n";
    
} catch (Exception $e) {
    echo "ERROR: " . $e->getMessage() . "\n";
    
    if (isset($conn) && $conn) {
        ftp_close($conn);
    }
    
    echo "Upload test failed.\n";
    exit(1);
}